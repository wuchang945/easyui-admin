<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/tx 
 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 定义事务管理器（声明式的事务） -->
	<!-- 由spring管理mybatis的事物 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="NOT_SUPPORTED" read-only="false" timeout="120" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" timeout="120" rollback-for="Exception" />
			<tx:method name="doIn*" propagation="REQUIRED" read-only="false" timeout="120" rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" timeout="120" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" timeout="120" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" timeout="120" rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED" read-only="false" timeout="120" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="txAdvice"  pointcut="execution(* com.feed.ecp..service.*Service*.*(..))" />
	</aop:config>
	
	<!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->
	
<!-- 	 <bean id="transactionInterceptor" -->
<!-- 		class="org.springframework.transaction.interceptor.TransactionInterceptor"> -->
<!-- 		<property name="transactionManager" ref="transactionManager"></property> -->
<!-- 		<property name="transactionAttributes"> -->
<!-- 			<props> -->
				<!--
					PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行;
					PROPAGATION_MANDATORY: 使用当前事务, 如果没有, 则抛出异常;
					PROPAGATION_REQUIRED: 新建事务,如果当前有事务, 则挂起; 
					PROPAGATION_NOT_SUPPORTED: 以非事务的方式执行, 如果当前有事务,则挂起; 
					PROPAGATION_NEVER: 以非事务的方式执行, 如果当前有事务,则抛出异常;
					+/-Exception: + 表示异常出现时事物提交 - 表示异常出现时事务回滚
				-->
<!-- 				<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop> -->
<!-- 				<prop key="del*"> PROPAGATION_SUPPORTS</prop> -->
<!-- 				<prop key="update*">PROPAGATION_REQUIRED</prop> -->
<!-- 				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

</beans>  